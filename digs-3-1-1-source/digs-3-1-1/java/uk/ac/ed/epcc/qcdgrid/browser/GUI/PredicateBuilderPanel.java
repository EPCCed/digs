/*
 * Copyright (c) 2003 The University of Edinburgh. All rights reserved.
 *
 * Released under the OGSA-DAI Project Software Licence.
 * Please refer to licence.txt for full project software licence.
 */

package uk.ac.ed.epcc.qcdgrid.browser.GUI;

import javax.swing.*;
import java.awt.*;

/**
 * Title:       PredicateBuilderPanel
 * Description: An abstract superclass of all the GUI elements which
 * allow a predicate to be constructed based on the type of a node
 * Copyright:    Copyright (c) 2003
 * Company:      The University of Edinburgh
 * @author James Perry
 * @version 1.0
 */
abstract public class PredicateBuilderPanel extends JPanel {

    /** all predicate builders have a "Not" checkbox for easily
     *  inverting their effect */
    protected JCheckBox notCheckBox;

    /**
     *  Constructor: this class can't be instantiated but
     *  subclasses need to call this
     */
    protected PredicateBuilderPanel() {
	super(new BorderLayout());

	notCheckBox = new JCheckBox("Not");
	add(notCheckBox, BorderLayout.NORTH);
    }

    /**
     *  @return the XPath string represented by the predicate input
     */
    abstract public String getXPath();
    
    /**
     *  disables all the GUI elements on this panel
     */
    public void disable() {
	notCheckBox.setEnabled(false);
    }

    /**
     *  enables all the GUI elements on this panel
     */
    public void enable() {
	notCheckBox.setEnabled(true);
    }

    /**
     *  Attempts to set a predicate to edit in this panel
     *  @param pred the predicate to edit
     *  @return true on success, false if predicate was not generated by this panel
     */
    abstract public boolean setPredicate(String pred);
}
